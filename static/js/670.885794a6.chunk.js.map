{"version":3,"file":"static/js/670.885794a6.chunk.js","mappings":"qSAGaA,EAAuBC,EAAAA,GAAAA,IAAH,+QAapBC,EAAgBD,EAAAA,GAAAA,IAAH,+MAWbE,EAAcF,EAAAA,GAAAA,IAAH,mMAWXG,EAAgBH,EAAAA,GAAAA,IAAH,gDAIbI,EAAQJ,EAAAA,GAAAA,GAAH,8CAILK,EAAWL,EAAAA,GAAAA,EAAH,8FAMRM,EAAUN,EAAAA,GAAAA,IAAH,iGAMPO,GAAOP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,kaAiBJS,GAAUT,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,uWCzEPU,EAAKV,EAAAA,GAAAA,GAAH,gKAQFW,EAAQX,EAAAA,GAAAA,MAAH,kFAKLY,EAAKZ,EAAAA,GAAAA,GAAH,kDAIFa,EAAgBb,EAAAA,GAAAA,GAAH,4G,SC2C1B,EA3DsB,SAAC,GAAc,IAAZc,EAAW,EAAXA,KACbC,EAAgFD,EAAhFC,aAAcC,EAAkEF,EAAlEE,aAAcC,EAAoDH,EAApDG,qBAAsBC,EAA8BJ,EAA9BI,QAASC,EAAqBL,EAArBK,SAAUC,EAAWN,EAAXM,OAE7E,OACI,SAACT,EAAD,WACI,8BACI,UAACD,EAAD,YACI,SAACE,EAAD,WACI,SAACC,EAAD,0BAEJ,SAACD,EAAD,WACI,0BAAOG,UAGf,UAACL,EAAD,YACI,SAACE,EAAD,WACI,SAACC,EAAD,+BAEJ,SAACD,EAAD,WACI,0BAAOI,UAGf,UAACN,EAAD,YACI,SAACE,EAAD,WACI,SAACC,EAAD,0BAEJ,SAACD,EAAD,WACI,0BAAOK,EAAqBI,KAAI,SAACC,GAAD,OAAaA,EAAQC,IAArB,YAGxC,UAACb,EAAD,YACI,SAACE,EAAD,WACI,SAACC,EAAD,yBAEJ,SAACD,EAAD,WACI,0BAAOQ,EAAOC,KAAI,SAACC,GAAD,OAAaA,EAAQC,IAArB,IAA2BC,KAAK,aAG1D,UAACd,EAAD,YACI,SAACE,EAAD,WACI,SAACC,EAAD,uBAEJ,SAACD,EAAD,WACI,4BAAOM,EAAP,iBAGR,UAACR,EAAD,YACI,SAACE,EAAD,WACI,SAACC,EAAD,2BAEJ,SAACD,EAAD,WACI,4BAAOO,EAAP,oBAMvB,ECnCD,EArBwB,SAAC,GAAc,IAAZL,EAAW,EAAXA,KACfW,EAAgCX,EAAhCW,MAAOC,EAAyBZ,EAAzBY,QAASC,EAAgBb,EAAhBa,YAExB,OACI,UAAC5B,EAAD,YACI,UAACE,EAAD,YACI,SAACC,EAAD,CAAa0B,IAAG,yCAAoCD,GAAeE,IAAI,YACvE,UAAC1B,EAAD,YACI,SAACC,EAAD,UAAQqB,KACR,SAACpB,EAAD,UAAWqB,KACX,SAAC,EAAD,CAAeZ,KAAMA,WAG7B,UAACR,EAAD,YACI,SAACC,EAAD,CAAMuB,GAAI,OAAV,mBACA,SAACrB,EAAD,CAASqB,GAAI,UAAb,0BAIf,ECpBYC,EAAwB/B,EAAAA,GAAAA,IAAH,mHAOrBgC,GAAehC,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,8TC2BzB,EA9ByB,WAAO,IAAD,IACnBiC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCJ,EAAAA,EAAAA,UAAQ,iBAACG,QAAD,IAACA,GAAD,UAACA,EAAUE,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,KAA1E,eAAOC,EAAP,KAAqBC,EAArB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAuBZ,GAAIa,MAAK,SAAChC,GAC7BiC,EAAAA,QAAAA,OAAe,CACXC,SAAU,UACVC,qBAAsB,MAE1BZ,EAAQvB,EACX,IAAEoC,SAAQ,WACPH,EAAAA,QAAAA,SACAJ,EAAgBD,EACnB,GACJ,GAAE,CAACT,EAAIS,KAGJ,iCACI,SAACX,EAAD,WACI,SAACC,EAAD,CAAcF,GAAIY,EAAlB,uBAEHN,IAAQ,SAAC,EAAD,CAAiBtB,KAAMsB,KAChC,SAAC,KAAD,MAGX,C,mMCjCKe,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,EAAAA,EAAAA,IAAA,iCAAoCF,EAApC,2BADpB,cACGG,EADH,yBAEIA,EAASxC,KAAKyC,SAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,uFACoBJ,EAAAA,EAAAA,IAAA,gCAAmCF,EAAnC,iCAAmEM,EAAnE,gCADpB,cACGH,EADH,yBAEIA,EAASxC,KAAKyC,SAFlB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACoBN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAwCR,EAAxC,oBADpB,cACGG,EADH,yBAEIA,EAASxC,MAFb,kEAKA,SAAe8C,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACoBN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAAgDR,EAAhD,2BADpB,cACGG,EADH,yBAEIA,EAASxC,KAAKyC,SAFlB,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,uFACoBN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAAgDR,EAAhD,2BADpB,cACGG,EADH,yBAEIA,EAASxC,KAAKgD,MAFlB,kEAtBPT,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/pages/MovieDetailsPage/FilmDetailsCard/FilmDetailsCard.styled.jsx","components/pages/MovieDetailsPage/TableInfoFilm/TableInfoFilm.styled.jsx","components/pages/MovieDetailsPage/TableInfoFilm/TableInfoFilm.jsx","components/pages/MovieDetailsPage/FilmDetailsCard/FilmDetailsCard.jsx","components/pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/pages/MovieDetailsPage/MovieDetailsPage.jsx","services/API.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const ContainerFilmDetails = styled.div`\n    margin-top: 10px;\n    padding: 10px;\n    border-radius: 30px;\n    border: 0.5px solid #ffffff;\n    background-color: rgba(0, 0, 0, 0.8);\n    color: #ffffff;\n\n    @media screen and (max-width: 480px) {\n        max-width: 310px;\n    }\n`;\n\nexport const FilmContainer = styled.div`\n    display: flex;\n    margin-top: 20px;\n\n    @media screen and (max-width: 480px) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n`;\n\nexport const ImagePoster = styled.img`\n    border: 3px solid #ffffff;\n    width: 320px;\n    height: 460px;\n\n    @media screen and (max-width: 480px) {\n        width: 250px;\n        height: 350px;\n    }\n`;\n\nexport const ContainerMeta = styled.div`\n    margin-left: 20px;\n`;\n\nexport const Title = styled.h1`\n    font-size: 16px;\n`;\n\nexport const PreTitle = styled.p`\n    margin-top: 10px;\n    margin-bottom: 20px;\n    color: #818181;\n`;\n\nexport const AddInfo = styled.div`\n    margin-top: 20px;\n    display: flex;\n    justify-content: center;\n`;\n\nexport const Cast = styled(Link)`\n    padding: 10px 50px;\n    background-color: #ffffff;\n    border-radius: 20px;\n    margin-right: 30px;\n    text-decoration: none;\n    color: #000000;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        background-color: #ff6b01;\n    }\n    @media screen and (max-width: 480px) {\n        padding: 10px 30px;\n        margin-right: 10px;\n    }\n`;\n\nexport const Reviews = styled(Link)`\n    padding: 10px 50px;\n    background-color: #fff;\n    border-radius: 20px;\n    text-decoration: none;\n    color: black;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        background-color: #ff6b01;\n    }\n    @media screen and (max-width: 480px) {\n        padding: 10px 30px;\n    }\n`;","import styled from \"styled-components\";\n\nexport const Tr = styled.tr`\n    @media screen and (max-width: 1280px) {\n        display: flex;\n        flex-direction: column;\n        margin-top: 10px;\n    }\n`;\n\nexport const Table = styled.table`\n    border-spacing: 0px;\n    border-collapse: collapse;\n`;\n\nexport const Td = styled.td`\n    vertical-align: sub;\n`;\n\nexport const TitleCategory = styled.h2`\n    width: 200px;\n    margin-top: 5px;\n    font-size: 20px;\n    color: #ff6b01;\n`;","import PropTypes from \"prop-types\";\nimport { Table, Tr, Td, TitleCategory } from \"./TableInfoFilm.styled\";\n\nconst TableInfoFilm = ({ data }) => {\n    const { vote_average, release_date, production_countries, runtime, overview, genres } = data;\n\n    return (\n        <Table>\n            <tbody>\n                <Tr>\n                    <Td>\n                        <TitleCategory>Ratings:</TitleCategory>\n                    </Td>\n                    <Td>\n                        <span>{vote_average}</span>\n                    </Td>\n                </Tr>\n                <Tr>\n                    <Td>\n                        <TitleCategory>Release date:</TitleCategory>\n                    </Td>\n                    <Td>\n                        <span>{release_date}</span>\n                    </Td>\n                </Tr>\n                <Tr>\n                    <Td>\n                        <TitleCategory>Country:</TitleCategory>\n                    </Td>\n                    <Td>\n                        <span>{production_countries.map((element) => element.name)}</span>\n                    </Td>\n                </Tr>\n                <Tr>\n                    <Td>\n                        <TitleCategory>Gemres:</TitleCategory>\n                    </Td>\n                    <Td>\n                        <span>{genres.map((element) => element.name).join(\" \")}</span>\n                    </Td>\n                </Tr>\n                <Tr>\n                    <Td>\n                        <TitleCategory>Time:</TitleCategory>\n                    </Td>\n                    <Td>\n                        <span>{runtime} min.</span>\n                    </Td>\n                </Tr>\n                <Tr>\n                    <Td>\n                        <TitleCategory>Overview:</TitleCategory>\n                    </Td>\n                    <Td>\n                        <span>{overview} min.</span>\n                    </Td>\n                </Tr>\n            </tbody>\n        </Table>\n    );\n};\n\nexport default TableInfoFilm;\n\nTableInfoFilm.propTypes = {\n    data: PropTypes.object.isRequired,\n};","import PropTypes from \"prop-types\";\nimport { ContainerFilmDetails, FilmContainer, Reviews, Cast, AddInfo, Title, PreTitle, ContainerMeta, ImagePoster } from \"./FilmDetailsCard.styled\";\nimport TableInfoFilm from \"../TableInfoFilm\";\n\nconst FilmDetailsCard = ({ data }) => {\n    const { title, tagline, poster_path } = data;\n\n    return (\n        <ContainerFilmDetails>\n            <FilmContainer>\n                <ImagePoster src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"poster\" />\n                <ContainerMeta>\n                    <Title>{title}</Title>\n                    <PreTitle>{tagline}</PreTitle>\n                    <TableInfoFilm data={data} />\n                </ContainerMeta>\n            </FilmContainer>\n            <AddInfo>\n                <Cast to={\"cast\"}>Cast</Cast>\n                <Reviews to={\"reviews\"}>Reviews</Reviews>\n            </AddInfo>\n        </ContainerFilmDetails>\n    );\n};\n\nexport default FilmDetailsCard;\n\nFilmDetailsCard.propTypes = {\n    data: PropTypes.object.isRequired,\n};","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const ButtonGoBackContainer = styled.div`\n    margin-top: 10px;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`;\n\nexport const ButtonGoBack = styled(Link)`\n    padding: 5px 10px;\n    border: none;\n    text-decoration: none;\n    color: #fff;\n    background-color: #000;\n    border-radius: 20px;\n    cursor: pointer;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        background-color: #ff6b01;\n    }\n`;","import { useState, useEffect } from \"react\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { Loading } from \"notiflix/build/notiflix-loading-aio\";\nimport * as FilmsAPI from \"../../../services/API\";\nimport FilmDetailsCard from \"./FilmDetailsCard\";\nimport { ButtonGoBackContainer, ButtonGoBack } from \"./MovieDetailsPage.styled\";\n\nconst MovieDetailsPage = () => {\n    const { id } = useParams();\n    const [film, setFilm] = useState();\n    const location = useLocation();\n    const [prevLocation, setPrevLocation] = useState(location?.state?.from ?? \"/\");\n\n    useEffect(() => {\n        FilmsAPI.fetchFilmInfo(id).then((data) => {\n            Loading.circle({\n                svgColor: \"#ff6b01\",\n                cssAnimationDuration: 800,\n            });\n            setFilm(data);\n        }).finally(() => {\n            Loading.remove();\n            setPrevLocation(prevLocation);\n        });\n    }, [id, prevLocation]);\n\n    return (\n        <>\n            <ButtonGoBackContainer>\n                <ButtonGoBack to={prevLocation}>Go back</ButtonGoBack>\n            </ButtonGoBackContainer>\n            {film && <FilmDetailsCard data={film} />}\n            <Outlet />\n        </>\n    );\n};\n\nexport default MovieDetailsPage;","import axios from \"axios\";\n\nconst API_KEY = \"41fd8802ca4c37bec04d22336b2830f1\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport async function fetchPopularFilms() {\n    const response = await axios.get(`/movie/popular?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}\n\nexport async function fetchSearchFilmByName(filmName) {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${filmName}&page=1&include_adult=false`);\n    return response.data.results;\n}\n\nexport async function fetchFilmInfo(movie_id) {\n    const response = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport async function fetchMovieReviews(movie_id) {\n    const response = await axios.get(`/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}\n\nexport async function fetchMovieCredits(movie_id) {\n    const response = await axios.get(`/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.cast;\n}"],"names":["ContainerFilmDetails","styled","FilmContainer","ImagePoster","ContainerMeta","Title","PreTitle","AddInfo","Cast","Link","Reviews","Tr","Table","Td","TitleCategory","data","vote_average","release_date","production_countries","runtime","overview","genres","map","element","name","join","title","tagline","poster_path","src","alt","to","ButtonGoBackContainer","ButtonGoBack","id","useParams","useState","film","setFilm","location","useLocation","state","from","prevLocation","setPrevLocation","useEffect","FilmsAPI","then","Loading","svgColor","cssAnimationDuration","finally","API_KEY","fetchPopularFilms","axios","response","results","fetchSearchFilmByName","filmName","fetchFilmInfo","movie_id","fetchMovieReviews","fetchMovieCredits","cast"],"sourceRoot":""}