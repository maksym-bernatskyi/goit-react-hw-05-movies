{"version":3,"file":"static/js/109.19b61bb9.chunk.js","mappings":"kPAEaA,EAAiBC,EAAAA,GAAAA,IAAH,iDAIdC,EAAiBD,EAAAA,GAAAA,EAAH,mEAKdE,EAAcF,EAAAA,GAAAA,GAAH,8CAIXG,EAAQH,EAAAA,GAAAA,IAAH,mEAKLI,EAAOJ,EAAAA,GAAAA,GAAH,yEAKJK,EAAUL,EAAAA,GAAAA,IAAH,4FAMPM,EAAON,EAAAA,GAAAA,GAAH,2Y,SCVjB,EAlByB,SAAC,GAAc,IAAZO,EAAW,EAAXA,KACxB,OACI,SAACD,EAAD,UACKC,EAAKC,KAAI,SAACC,GAAD,OACN,SAACL,EAAD,WACI,UAACC,EAAD,YACA,SAACF,EAAD,CAAOO,IAAKD,EAAQE,aAAR,8CAA8DF,EAAQE,cAAtE,wEAAgKC,IAAI,kBAChL,UAACb,EAAD,YACI,SAACG,EAAD,UAAcO,EAAQI,QACtB,UAACZ,EAAD,yBAA4BQ,EAAQK,oBALjCL,EAAQM,GADb,KAarB,E,kBCKD,EAlBqB,WACjB,IAAMC,GAASC,EAAAA,EAAAA,MACf,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAA2BN,EAAOD,IAAIQ,MAAK,SAAChB,GACxCiB,EAAAA,QAAAA,OAAe,CACXC,SAAU,YAEdL,EAAUb,EACb,IAAEmB,SAAQ,WACPF,EAAAA,QAAAA,QACH,GACJ,GAAE,CAACR,EAAOD,MAEJ,8BAAGI,IAAU,SAAC,EAAD,CAAkBZ,KAAMY,KAC/C,C,+ICpBKQ,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,EAAAA,EAAAA,IAAA,iCAAoCF,EAApC,2BADpB,cACGG,EADH,yBAEIA,EAASvB,KAAKwB,SAFlB,kEAeA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACoBJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,4BAAgDN,EAAhD,2BADpB,cACGG,EADH,yBAEIA,EAASvB,KAAKwB,SAFlB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACoBJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,4BAAgDN,EAAhD,2BADpB,cACGG,EADH,yBAEIA,EAASvB,KAAK4B,MAFlB,kEAtBPN,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/MovieCredits/MovieCreditsCard/MovieCreditsCard.styled.jsx","components/MovieCredits/MovieCreditsCard/MovieCreditsCard.jsx","components/MovieCredits/MovieCredits.jsx","services/API.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContainerTitle = styled.div`\n    text-align: center;\n`;\n\nexport const PreTitleActors = styled.p`\n    font-size: 16px;\n    color: #ff6b01;\n`;\n\nexport const TitleActors = styled.h2`\n    font-size: 20px;\n`;\n\nexport const Image = styled.img`\n    display: block;\n    max-width: 100%;\n`;\n\nexport const Item = styled.li`\n    border-radius: 10px;\n    overflow: hidden;\n`;\n\nexport const Wrapper = styled.div`\n    height: 100%;\n    color: #ffffff;\n    border-color: #000000;\n`;\n\nexport const List = styled.ul`\n    padding: 10px;\n    margin-top: 30px;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 20px;\n    list-style: none;\n\n    @media screen and (min-width: 768px) and (max-width: 1024px) {\n        grid-template-columns: repeat(4, 1fr);\n    }\n    @media screen and (min-width: 1024px) {\n        grid-template-columns: repeat(6, 1fr);\n    }\n`;","import PropTypes from \"prop-types\";\nimport { ContainerTitle, PreTitleActors, TitleActors, Image, List, Item, Wrapper } from \"./MovieCreditsCard.styled\";\n\nconst MovieCreditsCard = ({ data }) => {\n    return (\n        <List>\n            {data.map((element) => (\n                <Item key={element.id}>\n                    <Wrapper>\n                    <Image src={element.profile_path ? `https://image.tmdb.org/t/p/original/${element.profile_path}` : `https://banffventureforum.com/wp-content/uploads/2019/08/No-Image.png`} alt=\"Photo Actors\" />\n                    <ContainerTitle>\n                        <TitleActors>{element.name}</TitleActors>\n                        <PreTitleActors>Character: {element.character}</PreTitleActors>\n                    </ContainerTitle>\n                    </Wrapper>\n                </Item>\n            ))}\n        </List>\n    );\n};\n\nexport default MovieCreditsCard;\n\nMovieCreditsCard.propTypes = {\n    data: PropTypes.array.isRequired,\n};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieCreditsCard from \"./MovieCreditsCard\";\nimport * as FetchAPI from \"../../services/API\";\nimport { Loading } from \"notiflix/build/notiflix-aio\";\n\nconst MovieCredits = () => {\n    const params = useParams();\n    const [actors, setActors] = useState([]);\n\n    useEffect(() => {\n        FetchAPI.fetchMovieCredits(params.id).then((data) => {\n            Loading.circle({\n                svgColor: \"#ff6b01\",\n            });\n            setActors(data);\n        }).finally(() => {\n            Loading.remove();\n        });\n    }, [params.id]);\n\n    return <>{actors && <MovieCreditsCard data={actors} />}</>;\n};\n\nexport default MovieCredits;","import axios from \"axios\";\n\nconst API_KEY = \"41fd8802ca4c37bec04d22336b2830f1\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport async function fetchPopularFilms() {\n    const response = await axios.get(`/movie/popular?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}\n\nexport async function fetchSearchFilmByName(filmName) {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${filmName}&page=1&include_adult=false`);\n    return response.data.results;\n}\n\nexport async function fetchFilmInfo(movie_id) {\n    const response = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport async function fetchMovieReviews(movie_id) {\n    const response = await axios.get(`/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}\n\nexport async function fetchMovieCredits(movie_id) {\n    const response = await axios.get(`/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.cast;\n}"],"names":["ContainerTitle","styled","PreTitleActors","TitleActors","Image","Item","Wrapper","List","data","map","element","src","profile_path","alt","name","character","id","params","useParams","useState","actors","setActors","useEffect","FetchAPI","then","Loading","svgColor","finally","API_KEY","fetchPopularFilms","axios","response","results","fetchMovieReviews","movie_id","fetchMovieCredits","cast"],"sourceRoot":""}