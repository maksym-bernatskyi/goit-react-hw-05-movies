{"version":3,"file":"static/js/260.81b0ee45.chunk.js","mappings":"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","sources":["components/FilmCard/FilmCard.styled.jsx","components/Genres/genresInfo.jsx","components/Genres/GenerateGenres.jsx","components/FilmCard/FilmCard.jsx","components/FilmList/FilmList.styled.jsx","components/FilmList/FilmList.jsx","components/pages/MoviesPage/Form/Form.styled.jsx","components/pages/MoviesPage/Form/Form.jsx","components/pages/MoviesPage/MoviesPage.jsx","services/API.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const ItemLink = styled(Link)`\n    text-decoration: none;\n    color: #fff;\n`;\n\nexport const Item = styled.li`\n    overflow: hidden;\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px 0px rgba(255, 255, 255, 0.75);\n    background-color: RGBA(0, 0, 0, 1);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    \n    &:hover {\n    transform: scale(1.02);\n    }\n\n    @media screen and (max-width: 480px) {\n    width: 80%;\n    }\n`;\n\nexport const Title = styled.p`\n    font-size: 20px;\n    margin-bottom: 5px;\n`;\n\nexport const MetaWrapper = styled.div`\n    padding: 10px;\n`;\n\nexport const Image = styled.img`\n    display: block;\n    max-width: 100%;\n`;","export const genresInfo = [\n    { id: 28, name: \"Action\" },\n    { id: 12, name: \"Adventure\" },\n    { id: 16, name: \"Animation\" },\n    { id: 35, name: \"Comedy\" },\n    { id: 80, name: \"Crime\" },\n    { id: 99, name: \"Documentary\" },\n    { id: 18, name: \"Drama\" },\n    { id: 10751, name: \"Family\" },\n    { id: 14, name: \"Fantasy\" },\n    { id: 36, name: \"History\" },\n    { id: 27, name: \"Horror\" },\n    { id: 10402, name: \"Music\" },\n    { id: 9648, name: \"Mystery\" },\n    { id: 10749, name: \"Romance\" },\n    { id: 878, name: \"Science Fiction\" },\n    { id: 10770, name: \"TV Movie\" },\n    { id: 53, name: \"Thriller\" },\n    { id: 10752, name: \"War\" },\n    { id: 37, name: \"Western\" },\n  ];","import styled from \"styled-components\";\nimport { genresInfo } from \"./genresInfo\";\n\nexport const GenerateGenres = (genresId) => {\n    const id = Object.values(genresId);\n    const listGenres = [];\n\n    genresInfo.forEach((element) => {\n        if (id[0].includes(element.id)) {\n            listGenres.push(element.name);\n        }\n    });\n    return <Genres>{listGenres.slice(0, 2).join(\", \") + \", Other\"}</Genres>;\n};\n\nconst Genres = styled.span`\n    color: #ff6b01;\n`;","import PropTypes from \"prop-types\";\nimport { Item, Title, MetaWrapper, Image } from \"./FilmCard.styled\";\nimport { GenerateGenres } from \"../Genres/GenerateGenres\";\n\nconst FilmCard = ({ itemData }) => {\n    const { poster_path, title, genre_ids } = itemData;\n    return (\n        <>\n            <Item>\n            <Image \n                src={\n                    poster_path \n                    ? `https://image.tmdb.org/t/p/w500${poster_path}` \n                    : `https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png`\n                } \n                alt=\"\" \n            />\n            <MetaWrapper>\n                <Title>{title}</Title>\n                <GenerateGenres genresId={genre_ids} />\n            </MetaWrapper>\n            </Item>\n        </>\n    );\n};\n\nexport default FilmCard;\n\nFilmCard.propTypes = {\n    itemData: PropTypes.object.isRequired,\n};","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 20px;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 1em;\n    list-style: none;\n\n    @media screen and (max-width: 480px) {\n        grid-template-columns: repeat(1, 1fr);\n        justify-items: center;\n    }\n`;","import { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport FilmCard from \"../FilmCard\";\nimport { List } from \"./FilmList.styled\";\nimport { ItemLink } from \"../FilmCard/FilmCard.styled\";\n\nconst FilmList = ({ data }) => {\n    const location = useLocation();\n\n    return (\n        <List>\n            {data.map((element) => (\n                <ItemLink to={`/movies/${element.id}`} state={{ from: location }} key={element.id}>\n                    <FilmCard itemData={element} />\n                </ItemLink>\n            ))}\n        </List>\n    );\n};\n\nexport default FilmList;\n\nFilmList.propTypes = {\n    data: PropTypes.array.isRequired,\n};","import styled from \"styled-components\";\nimport { BsArrowRightCircle } from \"react-icons/bs\";\n\nexport const InputContainer = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const ButtonSubmit = styled.button`\n    display: flex;\n    align-items: center;\n    border: none;\n    outline: none;\n    padding: 4.5px;\n    padding-top: 4px;\n    cursor: pointer;\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n    background-color: #20212a;\n    &:hover {\n        background-color: #4754c8;\n    }\n`;\n\nexport const Input = styled.input`\n    width: 400px;\n    padding: 10px;\n    border: none;\n    outline: none;\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n    background-color: #20212a;\n    caret-color: #ff6b01;\n    color: #ffffff;\n\n    @media screen and (max-width: 480px) {\n        max-width: 300px;\n    }\n`;\n\nexport const IconSearch = styled(BsArrowRightCircle)`\n    color: #ffffff;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        color: #ff6b01;\n    }\n`;","import PropTypes from \"prop-types\";\nimport { InputContainer, ButtonSubmit, Input, IconSearch } from \"./Form.styled\";\n\nconst Form = ({ handleSubmit, handleInputChange, query }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <InputContainer>\n                {query ? \n                (<Input placeholder=\"Type to search\" type=\"text\" onChange={handleInputChange} />) \n                : \n                (<Input placeholder=\"Type to search\" type=\"text\" onChange={handleInputChange} />)\n                }\n\n                <ButtonSubmit type=\"submit\">\n                    <IconSearch size={30} />\n                </ButtonSubmit>\n            </InputContainer>\n        </form>\n    );\n};\n\nexport default Form;\n\nForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleInputChange: PropTypes.func.isRequired,\n    query: PropTypes.string.isRequired,\n};","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport { Loading } from \"notiflix/build/notiflix-loading-aio\";\nimport * as FilmsAPI from \"../../../services/API\";\nimport FilmList from \"../../FilmList\";\nimport Form from \"./Form/Form\";\n\nconst MoviesPage = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [query, setQuery] = useState(searchParams.get(\"query\") ?? \"\");\n    const [films, setFilms] = useState([]);\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    useEffect(() => {\n        if (query) {\n            setSearchParams(`query=${query}`);\n            FilmsAPI.fetchSearchFilmByName(query).then((data) => {\n                Loading.circle({\n                    svgColor: \"#ff6b01\",\n                });\n                setFilms(data);\n            }).finally(() => {\n                Loading.remove();\n            });\n        }\n    }, [query, setSearchParams]);\n\n    const handleInputChange = (event) => {\n        setSearchValue(event.target.value.toLowerCase().trim());\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        if (searchValue === \"\") {\n            Notify.failure(\"Please enter the name!\");\n            return;\n        }\n        setQuery(searchValue);\n    };\n\n    return (\n        <>\n        <ContainerForm>\n            <Form \n            handleSubmit={handleSubmit}\n            handleInputChange={handleInputChange}\n            query={query}\n            />\n        </ContainerForm>\n        <FilmList data={films} />\n        </>\n    );\n};\n\nconst ContainerForm = styled.div`\n    margin-top: 20px;\n`;\n\nexport default MoviesPage;","import axios from \"axios\";\n\nconst API_KEY = \"41fd8802ca4c37bec04d22336b2830f1\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport async function fetchPopularFilms() {\n    const response = await axios.get(`/movie/popular?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}\n\nexport async function fetchSearchFilmByName(filmName) {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${filmName}&page=1&include_adult=false`);\n    return response.data.results;\n}\n\nexport async function fetchFilmInfo(movie_id) {\n    const response = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport async function fetchMovieReviews(movie_id) {\n    const response = await axios.get(`/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}\n\nexport async function fetchMovieCredits(movie_id) {\n    const response = await axios.get(`/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.cast;\n}"],"names":["ItemLink","styled","Link","Item","Title","MetaWrapper","Image","genresInfo","id","name","GenerateGenres","genresId","Object","values","listGenres","forEach","element","includes","push","Genres","slice","join","itemData","poster_path","title","genre_ids","src","alt","List","data","location","useLocation","map","to","state","from","InputContainer","ButtonSubmit","Input","IconSearch","BsArrowRightCircle","handleSubmit","handleInputChange","query","onSubmit","placeholder","type","onChange","size","ContainerForm","useSearchParams","searchParams","setSearchParams","useState","get","setQuery","films","setFilms","searchValue","setSearchValue","useEffect","FilmsAPI","then","Loading","svgColor","finally","event","preventDefault","Notify","target","value","toLowerCase","trim","FilmList","API_KEY","fetchPopularFilms","axios","response","results","fetchSearchFilmByName","filmName","fetchFilmInfo","movie_id","fetchMovieReviews","fetchMovieCredits","cast"],"sourceRoot":""}